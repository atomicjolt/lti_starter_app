// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`application instances list row matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListRow
    applicationInstance={
      Object {
        "application_id": 23,
        "authentications": Array [],
        "id": 2,
        "site": Object {
          "url": "http://www.example.com",
        },
      }
    }
    canvasOauthURL="http://www.example.com"
    delete={[Function]}
    disable={[Function]}
    domain="www.example.com"
    lti_key="lti-key"
    save={[Function]}
    settings={
      Object {
        "lti_key": "lti-key",
        "user_canvas_domains": Array [
          "",
        ],
      }
    }
    sites={
      Object {
        "1": Object {
          "id": 1,
          "url": "http://www.example.com",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <td>
          <form
            action="http://www.example.com"
          >
            <SettingsInputs
              settings={
                Object {
                  "lti_key": "lti-key",
                  "user_canvas_domains": Array [
                    "",
                  ],
                }
              }
            />
            <input
              name="canvas_url"
              type="hidden"
              value="http://www.example.com"
            />
            <input
              name="oauth_complete_url"
              type="hidden"
              value="about://blank#applications/23/application_instances/2/installs"
            />
          </form>
          <Link
            onClick={[Function]}
            onlyActiveOnIndex={false}
            style={Object {}}
            to="applications/23/application_instances/2/installs"
          />
          <div>
            http://www.example.com
          </div>
        </td>,
        <td>
          <span />
        </td>,
        <td>
          <button
            onClick={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "border": "none",
                "color": "grey",
                "cursor": "pointer",
                "fontSize": "1.5em",
              }
            }
          >
            <i
              className="i-settings"
            />
          </button>
        </td>,
        <td>
          <button
            onClick={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "border": "none",
                "color": "grey",
                "cursor": "pointer",
                "fontSize": "1.5em",
              }
            }
          >
            <i
              className="i-settings"
            />
          </button>
          <ConfigXmlModal
            applicationInstance={
              Object {
                "application_id": 23,
                "authentications": Array [],
                "id": 2,
                "site": Object {
                  "url": "http://www.example.com",
                },
              }
            }
            closeModal={[Function]}
            isOpen={false}
          />
        </td>,
        <td>
          <button
            className="c-disable"
            onClick={[Function]}
          >
            <Enabled />
          </button>
        </td>,
        <td />,
        <td>
          0
        </td>,
        <td>
          Invalid Date
           
          Invalid Date
        </td>,
        <td>
          <button
            className="c-delete"
            onClick={[Function]}
          >
            <i
              className="i-delete"
            />
          </button>
        </td>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              action="http://www.example.com"
            >
              <SettingsInputs
                settings={
                  Object {
                    "lti_key": "lti-key",
                    "user_canvas_domains": Array [
                      "",
                    ],
                  }
                }
              />
              <input
                name="canvas_url"
                type="hidden"
                value="http://www.example.com"
              />
              <input
                name="oauth_complete_url"
                type="hidden"
                value="about://blank#applications/23/application_instances/2/installs"
              />
            </form>,
            <Link
              onClick={[Function]}
              onlyActiveOnIndex={false}
              style={Object {}}
              to="applications/23/application_instances/2/installs"
            />,
            <div>
              http://www.example.com
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "action": "http://www.example.com",
              "children": Array [
                <SettingsInputs
                  settings={
                    Object {
                      "lti_key": "lti-key",
                      "user_canvas_domains": Array [
                        "",
                      ],
                    }
                  }
                />,
                <input
                  name="canvas_url"
                  type="hidden"
                  value="http://www.example.com"
                />,
                <input
                  name="oauth_complete_url"
                  type="hidden"
                  value="about://blank#applications/23/application_instances/2/installs"
                />,
              ],
            },
            "ref": [Function],
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "settings": Object {
                    "lti_key": "lti-key",
                    "user_canvas_domains": Array [
                      "",
                    ],
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "canvas_url",
                  "type": "hidden",
                  "value": "http://www.example.com",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "oauth_complete_url",
                  "type": "hidden",
                  "value": "about://blank#applications/23/application_instances/2/installs",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": undefined,
              "onClick": [Function],
              "onlyActiveOnIndex": false,
              "style": Object {},
              "to": "applications/23/application_instances/2/installs",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "http://www.example.com",
            },
            "ref": null,
            "rendered": "http://www.example.com",
            "type": "div",
          },
        ],
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "border": "none",
                  "color": "grey",
                  "cursor": "pointer",
                  "fontSize": "1.5em",
                }
              }
            >
              <i
                className="i-settings"
              />
            </button>,
            null,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="i-settings"
              />,
              "onClick": [Function],
              "style": Object {
                "backgroundColor": "transparent",
                "border": "none",
                "color": "grey",
                "cursor": "pointer",
                "fontSize": "1.5em",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "i-settings",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
          null,
        ],
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "border": "none",
                  "color": "grey",
                  "cursor": "pointer",
                  "fontSize": "1.5em",
                }
              }
            >
              <i
                className="i-settings"
              />
            </button>,
            <ConfigXmlModal
              applicationInstance={
                Object {
                  "application_id": 23,
                  "authentications": Array [],
                  "id": 2,
                  "site": Object {
                    "url": "http://www.example.com",
                  },
                }
              }
              closeModal={[Function]}
              isOpen={false}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="i-settings"
              />,
              "onClick": [Function],
              "style": Object {
                "backgroundColor": "transparent",
                "border": "none",
                "color": "grey",
                "cursor": "pointer",
                "fontSize": "1.5em",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "i-settings",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "application": undefined,
              "applicationInstance": Object {
                "application_id": 23,
                "authentications": Array [],
                "id": 2,
                "site": Object {
                  "url": "http://www.example.com",
                },
              },
              "closeModal": [Function],
              "isOpen": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="c-disable"
            onClick={[Function]}
          >
            <Enabled />
          </button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Enabled />,
            "className": "c-disable",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 0,
        },
        "ref": null,
        "rendered": 0,
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Invalid Date",
            " ",
            "Invalid Date",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Invalid Date",
          " ",
          "Invalid Date",
        ],
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="c-delete"
            onClick={[Function]}
          >
            <i
              className="i-delete"
            />
          </button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="i-delete"
            />,
            "className": "c-delete",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "i-delete",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        "type": "td",
      },
    ],
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <td>
            <form
              action="http://www.example.com"
            >
              <SettingsInputs
                settings={
                  Object {
                    "lti_key": "lti-key",
                    "user_canvas_domains": Array [
                      "",
                    ],
                  }
                }
              />
              <input
                name="canvas_url"
                type="hidden"
                value="http://www.example.com"
              />
              <input
                name="oauth_complete_url"
                type="hidden"
                value="about://blank#applications/23/application_instances/2/installs"
              />
            </form>
            <Link
              onClick={[Function]}
              onlyActiveOnIndex={false}
              style={Object {}}
              to="applications/23/application_instances/2/installs"
            />
            <div>
              http://www.example.com
            </div>
          </td>,
          <td>
            <span />
          </td>,
          <td>
            <button
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "border": "none",
                  "color": "grey",
                  "cursor": "pointer",
                  "fontSize": "1.5em",
                }
              }
            >
              <i
                className="i-settings"
              />
            </button>
          </td>,
          <td>
            <button
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "border": "none",
                  "color": "grey",
                  "cursor": "pointer",
                  "fontSize": "1.5em",
                }
              }
            >
              <i
                className="i-settings"
              />
            </button>
            <ConfigXmlModal
              applicationInstance={
                Object {
                  "application_id": 23,
                  "authentications": Array [],
                  "id": 2,
                  "site": Object {
                    "url": "http://www.example.com",
                  },
                }
              }
              closeModal={[Function]}
              isOpen={false}
            />
          </td>,
          <td>
            <button
              className="c-disable"
              onClick={[Function]}
            >
              <Enabled />
            </button>
          </td>,
          <td />,
          <td>
            0
          </td>,
          <td>
            Invalid Date
             
            Invalid Date
          </td>,
          <td>
            <button
              className="c-delete"
              onClick={[Function]}
            >
              <i
                className="i-delete"
              />
            </button>
          </td>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <form
                action="http://www.example.com"
              >
                <SettingsInputs
                  settings={
                    Object {
                      "lti_key": "lti-key",
                      "user_canvas_domains": Array [
                        "",
                      ],
                    }
                  }
                />
                <input
                  name="canvas_url"
                  type="hidden"
                  value="http://www.example.com"
                />
                <input
                  name="oauth_complete_url"
                  type="hidden"
                  value="about://blank#applications/23/application_instances/2/installs"
                />
              </form>,
              <Link
                onClick={[Function]}
                onlyActiveOnIndex={false}
                style={Object {}}
                to="applications/23/application_instances/2/installs"
              />,
              <div>
                http://www.example.com
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "action": "http://www.example.com",
                "children": Array [
                  <SettingsInputs
                    settings={
                      Object {
                        "lti_key": "lti-key",
                        "user_canvas_domains": Array [
                          "",
                        ],
                      }
                    }
                  />,
                  <input
                    name="canvas_url"
                    type="hidden"
                    value="http://www.example.com"
                  />,
                  <input
                    name="oauth_complete_url"
                    type="hidden"
                    value="about://blank#applications/23/application_instances/2/installs"
                  />,
                ],
              },
              "ref": [Function],
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "settings": Object {
                      "lti_key": "lti-key",
                      "user_canvas_domains": Array [
                        "",
                      ],
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "canvas_url",
                    "type": "hidden",
                    "value": "http://www.example.com",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "oauth_complete_url",
                    "type": "hidden",
                    "value": "about://blank#applications/23/application_instances/2/installs",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "form",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "onClick": [Function],
                "onlyActiveOnIndex": false,
                "style": Object {},
                "to": "applications/23/application_instances/2/installs",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "http://www.example.com",
              },
              "ref": null,
              "rendered": "http://www.example.com",
              "type": "div",
            },
          ],
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "border": "none",
                    "color": "grey",
                    "cursor": "pointer",
                    "fontSize": "1.5em",
                  }
                }
              >
                <i
                  className="i-settings"
                />
              </button>,
              null,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="i-settings"
                />,
                "onClick": [Function],
                "style": Object {
                  "backgroundColor": "transparent",
                  "border": "none",
                  "color": "grey",
                  "cursor": "pointer",
                  "fontSize": "1.5em",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "i-settings",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "button",
            },
            null,
          ],
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "border": "none",
                    "color": "grey",
                    "cursor": "pointer",
                    "fontSize": "1.5em",
                  }
                }
              >
                <i
                  className="i-settings"
                />
              </button>,
              <ConfigXmlModal
                applicationInstance={
                  Object {
                    "application_id": 23,
                    "authentications": Array [],
                    "id": 2,
                    "site": Object {
                      "url": "http://www.example.com",
                    },
                  }
                }
                closeModal={[Function]}
                isOpen={false}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="i-settings"
                />,
                "onClick": [Function],
                "style": Object {
                  "backgroundColor": "transparent",
                  "border": "none",
                  "color": "grey",
                  "cursor": "pointer",
                  "fontSize": "1.5em",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "i-settings",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "application": undefined,
                "applicationInstance": Object {
                  "application_id": 23,
                  "authentications": Array [],
                  "id": 2,
                  "site": Object {
                    "url": "http://www.example.com",
                  },
                },
                "closeModal": [Function],
                "isOpen": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="c-disable"
              onClick={[Function]}
            >
              <Enabled />
            </button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Enabled />,
              "className": "c-disable",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 0,
          },
          "ref": null,
          "rendered": 0,
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Invalid Date",
              " ",
              "Invalid Date",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Invalid Date",
            " ",
            "Invalid Date",
          ],
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="c-delete"
              onClick={[Function]}
            >
              <i
                className="i-delete"
              />
            </button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="i-delete"
              />,
              "className": "c-delete",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "i-delete",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
          "type": "td",
        },
      ],
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
