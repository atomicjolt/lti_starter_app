APP_SUBDOMAIN=ltistarterapp
APP_ROOT_DOMAIN=atomicjolt.xyz
APP_PORT=3000
ASSETS_SUBDOMAIN=assets
ASSETS_PORT=3035 # This is the default port used by webpacker
ASSETS_URL=https://assets.atomicjolt.xyz


# ASSETS_URL is used for the webpack server's public path and will set an absolute url
# when loading assets. Not setting a value means the assets will be loaded from the local
# server. This works fine in development and will also work if you attempt to access your
# development server from a remote device (such as a mobile phone) for testing. You can set
# a localhost value if desired however note that doing so will prevent the assets from loading
# properly when attempting to access the server from a remote device.
# ASSETS_URL is mainly in place for situations where the react client starter app is incorporated
# into another project such as Ruby on Rails where there will be multiple servers. In this situation
# the client application will likely be loaded via a link in a page served from the Rail (or other similar)
# server. Since the webpack server will be serving assets on a different port (or domain) we can't use
# the default root path since doing so will result in the scripts requesting assets from the Rails
# server instead of the webpack server. In this instance setting ASSETS_URL will tell webpack to
# build and serve assets from a specific url - the webpack server's url.

# Use localhost
ASSETS_URL=http://0.0.0.0

# Use a local domain.
# Change /etc/hosts (on a mac) and add sites.dev and rcsassets.sites.dev. Each entry will need to point to 127.0.0.1
# ASSETS_URL=http://rcsassets.sites.dev

# Each LTI tool will require it's own subdomain to function properly. Add subdomains
# for each LTI tool here and then add it to seeds.rb for each application
APP_SUBDOMAINS=admin,helloworld,auth

APP_DEFAULT_CANVAS_URL=https://atomicjolt.instructure.com

# Obtain a Canvas Developer ID and Key for the from an Account Admin for
# the instance of Canvas to install the app into. ID and Keys are specific
# to a Canvas instance (they are not global like they used to be)
# To obtain a developer id and key first log in to Canvas as an admin. Then
# click on the 'admin' link in the left hand side bar. Next click on
# 'Developer Keys' then click on 'Add Developer Key' and follow the instructions
CANVAS_DEVELOPER_ID=1234
CANVAS_DEVELOPER_KEY='abc123'

# This helps support developer features like byebug by handling concurrency
# issues that come along with puma
RAILS_MAX_THREADS=1
WEB_CONCURRENCY=1
WEB_TIMEOUT=1000
