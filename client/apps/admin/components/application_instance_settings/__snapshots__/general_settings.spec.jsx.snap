// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GeneralSettings renders the GeneralSettings component 1`] = `
<div
  className="aj-columns"
>
  <div
    className="aj-col-flex"
  >
    <div
      className="aj-settings-title"
    >
      General Settings
    </div>
    <div
      className="aj-item-padding undefined"
    >
      <div
        className="c-input--container"
      >
        <label
          className="c-input aj-input--border undefined"
          htmlFor="nickname_input"
        >
          <span>
            Nickname
          </span>
          <input
            id="nickname_input"
            name="nickname"
            onChange={[Function]}
            type="text"
            value=""
          />
        </label>
      </div>
      <div
        className="c-input--container"
      >
        <label
          className="c-input aj-input--border undefined"
          htmlFor="primary_contact_input"
        >
          <span>
            Primary contact
          </span>
          <input
            id="primary_contact_input"
            name="primary_contact"
            onChange={[Function]}
            type="text"
            value=""
          />
        </label>
      </div>
      <div
        className="c-input--container"
      >
        <label
          className="c-input aj-input--border undefined"
          htmlFor="date_div"
        >
          <span>
            Date created
          </span>
          <input
            disabled={true}
            id="date_div"
            name="date_created"
            type="text"
            value="11/17/22"
          />
        </label>
      </div>
      <div
        className="c-input c-input--container undefined"
      >
        <span>
          Canvas URL
        </span>
        <div
          className="aj-react-select undefined css-b62m3t-container"
          onKeyDown={[Function]}
        >
          <span
            className="css-1f43avz-a11yText-A11yText"
            id="react-select-2-live-region"
          />
          <span
            aria-atomic="false"
            aria-live="polite"
            aria-relevant="additions text"
            className="css-1f43avz-a11yText-A11yText"
          />
          <div
            className=" css-1s2u09g-control"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className=" css-319lph-ValueContainer"
            >
              <div
                className=" css-qc6sy-singleValue"
              >
                https://www.example.com
              </div>
              <div
                className=" css-6j8wv5-Input"
                data-value=""
              >
                <input
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup={true}
                  autoCapitalize="none"
                  autoComplete="off"
                  autoCorrect="off"
                  className=""
                  disabled={false}
                  id="react-select-2-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  role="combobox"
                  spellCheck="false"
                  style={
                    Object {
                      "background": 0,
                      "border": 0,
                      "color": "inherit",
                      "font": "inherit",
                      "gridArea": "1 / 2",
                      "label": "input",
                      "margin": 0,
                      "minWidth": "2px",
                      "opacity": 1,
                      "outline": 0,
                      "padding": 0,
                      "width": "100%",
                    }
                  }
                  tabIndex={0}
                  type="text"
                  value=""
                />
              </div>
            </div>
            <div
              className=" css-1hb7zxy-IndicatorsContainer"
            >
              <span
                className=" css-1okebmr-indicatorSeparator"
              />
              <div
                aria-hidden="true"
                className=" css-tlfecz-indicatorContainer"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="css-tj5bde-Svg"
                  focusable="false"
                  height={20}
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <path
                    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                  />
                </svg>
              </div>
            </div>
          </div>
          <input
            name="site_id"
            type="hidden"
            value="3"
          />
        </div>
      </div>
      <div
        className="c-input--container"
      >
        <label
          className="c-input aj-input--border undefined"
          htmlFor="domain_input"
        >
          <span>
            LTI tool domain
          </span>
          <input
            id="domain_input"
            name="domain"
            onChange={[Function]}
            type="text"
          />
        </label>
      </div>
      <div
        className="c-input--container"
      >
        <label
          className="c-input aj-input--border undefined"
          htmlFor="canvas_token_input"
        >
          <span>
            Canvas Token
          </span>
          <input
            id="canvas_token_input"
            name="canvas_token"
            onChange={[Function]}
            type="text"
            value=""
          />
        </label>
        <div
          className="helper-text"
        >
          Current Canvas Token: undefined
        </div>
      </div>
      <div
        className="c-input c-input--container undefined"
      >
        <span>
          Language
        </span>
        <div
          className="aj-react-select undefined css-b62m3t-container"
          onKeyDown={[Function]}
        >
          <span
            className="css-1f43avz-a11yText-A11yText"
            id="react-select-3-live-region"
          />
          <span
            aria-atomic="false"
            aria-live="polite"
            aria-relevant="additions text"
            className="css-1f43avz-a11yText-A11yText"
          />
          <div
            className=" css-1s2u09g-control"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className=" css-319lph-ValueContainer"
            >
              <div
                className=" css-14el2xx-placeholder"
                id="react-select-3-placeholder"
              >
                Select...
              </div>
              <div
                className=" css-6j8wv5-Input"
                data-value=""
              >
                <input
                  aria-autocomplete="list"
                  aria-describedby="react-select-3-placeholder"
                  aria-expanded={false}
                  aria-haspopup={true}
                  autoCapitalize="none"
                  autoComplete="off"
                  autoCorrect="off"
                  className=""
                  disabled={false}
                  id="react-select-3-input"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  role="combobox"
                  spellCheck="false"
                  style={
                    Object {
                      "background": 0,
                      "border": 0,
                      "color": "inherit",
                      "font": "inherit",
                      "gridArea": "1 / 2",
                      "label": "input",
                      "margin": 0,
                      "minWidth": "2px",
                      "opacity": 1,
                      "outline": 0,
                      "padding": 0,
                      "width": "100%",
                    }
                  }
                  tabIndex={0}
                  type="text"
                  value=""
                />
              </div>
            </div>
            <div
              className=" css-1hb7zxy-IndicatorsContainer"
            >
              <span
                className=" css-1okebmr-indicatorSeparator"
              />
              <div
                aria-hidden="true"
                className=" css-tlfecz-indicatorContainer"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="css-tj5bde-Svg"
                  focusable="false"
                  height={20}
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <path
                    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                  />
                </svg>
              </div>
            </div>
          </div>
          <input
            name="language"
            type="hidden"
            value=""
          />
        </div>
      </div>
      <div
        className="c-input--container"
      >
        <label
          className="c-checkbox"
          htmlFor="rollbar_enabled_input"
        >
          <input
            id="rollbar_enabled_input"
            name="rollbar_enabled"
            onChange={[Function]}
            type="checkbox"
            value="true"
          />
          <span>
            Enable Rollbar
          </span>
        </label>
      </div>
      <div
        className="c-input--container"
      >
        <label
          className="c-checkbox"
          htmlFor="use_scoped_developer_key_input"
        >
          <input
            id="use_scoped_developer_key_input"
            name="use_scoped_developer_key"
            onChange={[Function]}
            type="checkbox"
            value="true"
          />
          <span>
            Use Scoped Developer Key
          </span>
        </label>
      </div>
      <div
        className="c-input--container"
      >
        <label
          className="c-checkbox"
          htmlFor="anonymous"
        >
          <input
            id="anonymous"
            name="anonymous"
            onChange={[Function]}
            type="checkbox"
            value="true"
          />
          <span>
            Anonymous (Don't store username and email during LTI launch)
          </span>
        </label>
      </div>
    </div>
  </div>
  <div
    className="aj-col-flex"
  >
    <div
      className="aj-settings-title"
    >
      LTI Key and Secret
    </div>
    <div
      className="aj-item-padding undefined"
    >
      <div
        className="c-input--container"
      >
        <label
          className="c-input aj-input--border undefined"
          htmlFor="lti_key_input"
        >
          <span>
            LTI key
          </span>
          <input
            disabled={true}
            id="lti_key_input"
            name="lti_key"
            onChange={[Function]}
            type="text"
          />
        </label>
      </div>
      <div
        className="c-input--container"
      >
        <label
          className="c-input aj-input--border undefined"
          htmlFor="lti_secret_input"
        >
          <span>
            LTI Secret
          </span>
          <input
            id="lti_secret_input"
            name="lti_secret"
            onChange={[Function]}
            type="text"
          />
        </label>
      </div>
    </div>
  </div>
</div>
`;
