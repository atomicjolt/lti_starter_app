// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sites list matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    sites={
      Object {
        "1": Object {
          "id": 1,
          "url": "bfcoder.com",
        },
        "2": Object {
          "id": 2,
          "url": "atomicjolt.com",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <thead>
          <tr>
            <th>
              <span>
                URL
              </span>
            </th>
            <th>
              <span>
                SETTINGS
              </span>
            </th>
            <th>
              <span>
                DELETE
              </span>
            </th>
          </tr>
        </thead>,
        <tbody>
          <SiteRow
            site={
              Object {
                "id": 1,
                "url": "bfcoder.com",
              }
            }
          />
          <SiteRow
            site={
              Object {
                "id": 2,
                "url": "atomicjolt.com",
              }
            }
          />
        </tbody>,
      ],
      "className": "c-table c-table--lti",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <tr>
            <th>
              <span>
                URL
              </span>
            </th>
            <th>
              <span>
                SETTINGS
              </span>
            </th>
            <th>
              <span>
                DELETE
              </span>
            </th>
          </tr>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <th>
                <span>
                  URL
                </span>
              </th>,
              <th>
                <span>
                  SETTINGS
                </span>
              </th>,
              <th>
                <span>
                  DELETE
                </span>
              </th>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  URL
                </span>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "URL",
                },
                "ref": null,
                "rendered": "URL",
                "type": "span",
              },
              "type": "th",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  SETTINGS
                </span>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "SETTINGS",
                },
                "ref": null,
                "rendered": "SETTINGS",
                "type": "span",
              },
              "type": "th",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  DELETE
                </span>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "DELETE",
                },
                "ref": null,
                "rendered": "DELETE",
                "type": "span",
              },
              "type": "th",
            },
          ],
          "type": "tr",
        },
        "type": "thead",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SiteRow
              site={
                Object {
                  "id": 1,
                  "url": "bfcoder.com",
                }
              }
            />,
            <SiteRow
              site={
                Object {
                  "id": 2,
                  "url": "atomicjolt.com",
                }
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "site_1",
            "nodeType": "class",
            "props": Object {
              "site": Object {
                "id": 1,
                "url": "bfcoder.com",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "site_2",
            "nodeType": "class",
            "props": Object {
              "site": Object {
                "id": 2,
                "url": "atomicjolt.com",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "tbody",
      },
    ],
    "type": "table",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <thead>
            <tr>
              <th>
                <span>
                  URL
                </span>
              </th>
              <th>
                <span>
                  SETTINGS
                </span>
              </th>
              <th>
                <span>
                  DELETE
                </span>
              </th>
            </tr>
          </thead>,
          <tbody>
            <SiteRow
              site={
                Object {
                  "id": 1,
                  "url": "bfcoder.com",
                }
              }
            />
            <SiteRow
              site={
                Object {
                  "id": 2,
                  "url": "atomicjolt.com",
                }
              }
            />
          </tbody>,
        ],
        "className": "c-table c-table--lti",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <tr>
              <th>
                <span>
                  URL
                </span>
              </th>
              <th>
                <span>
                  SETTINGS
                </span>
              </th>
              <th>
                <span>
                  DELETE
                </span>
              </th>
            </tr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <th>
                  <span>
                    URL
                  </span>
                </th>,
                <th>
                  <span>
                    SETTINGS
                  </span>
                </th>,
                <th>
                  <span>
                    DELETE
                  </span>
                </th>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span>
                    URL
                  </span>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "URL",
                  },
                  "ref": null,
                  "rendered": "URL",
                  "type": "span",
                },
                "type": "th",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span>
                    SETTINGS
                  </span>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "SETTINGS",
                  },
                  "ref": null,
                  "rendered": "SETTINGS",
                  "type": "span",
                },
                "type": "th",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span>
                    DELETE
                  </span>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "DELETE",
                  },
                  "ref": null,
                  "rendered": "DELETE",
                  "type": "span",
                },
                "type": "th",
              },
            ],
            "type": "tr",
          },
          "type": "thead",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SiteRow
                site={
                  Object {
                    "id": 1,
                    "url": "bfcoder.com",
                  }
                }
              />,
              <SiteRow
                site={
                  Object {
                    "id": 2,
                    "url": "atomicjolt.com",
                  }
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "site_1",
              "nodeType": "class",
              "props": Object {
                "site": Object {
                  "id": 1,
                  "url": "bfcoder.com",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "site_2",
              "nodeType": "class",
              "props": Object {
                "site": Object {
                  "id": 2,
                  "url": "atomicjolt.com",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "tbody",
        },
      ],
      "type": "table",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
