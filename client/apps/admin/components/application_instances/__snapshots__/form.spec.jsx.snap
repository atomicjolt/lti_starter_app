// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`application instance form matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    closeModal={[Function]}
    config="{ \\"foo\\": \\"bar\\" }"
    ltiConfigParseError=""
    newSite={[Function]}
    onChange={[Function]}
    save={[Function]}
    site_id="foo"
    sites={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="o-grid o-grid__modal-top"
>
          <div
                    className="o-grid__item u-half"
          >
                    <div
                              className="c-input"
                    >
                              <span>
                                        Domain
                              </span>
                              <Select
                                        addLabelText="Add \\"{label}\\"?"
                                        arrowRenderer={[Function]}
                                        autosize={true}
                                        backspaceRemoves={true}
                                        backspaceToRemoveMessage="Press backspace to remove {label}"
                                        clearAllText="Clear all"
                                        clearRenderer={[Function]}
                                        clearValueText="Clear value"
                                        clearable={false}
                                        closeOnSelect={true}
                                        deleteRemoves={true}
                                        delimiter=","
                                        disabled={false}
                                        escapeClearsValue={true}
                                        filterOptions={[Function]}
                                        ignoreAccents={true}
                                        ignoreCase={true}
                                        inputProps={Object {}}
                                        isLoading={false}
                                        joinValues={false}
                                        labelKey="label"
                                        matchPos="any"
                                        matchProp="any"
                                        menuBuffer={0}
                                        menuRenderer={[Function]}
                                        multi={false}
                                        name="site_id"
                                        noResultsText="No results found"
                                        onBlurResetsInput={true}
                                        onChange={[Function]}
                                        onCloseResetsInput={true}
                                        onSelectResetsInput={true}
                                        openOnClick={true}
                                        optionComponent={[Function]}
                                        options={
                                                  Array [
                                                            Object {
                                                              "label": <div>
                                                                Add New
                                                  </div>,
                                                              "onSelect": [Function],
                                                              "value": "new",
                                                            },
                                                          ]
                                        }
                                        pageSize={5}
                                        placeholder="Select a Domain"
                                        required={false}
                                        scrollMenuIntoView={true}
                                        searchable={false}
                                        simpleValue={false}
                                        tabSelectsValue={true}
                                        value="foo"
                                        valueComponent={[Function]}
                                        valueKey="value"
                              />
                    </div>
          </div>
          <div
                    className="o-grid__item u-half"
          >
                    <Input
                              className="c-input"
                              inputProps={
                                        Object {
                                                  "disabled": undefined,
                                                  "id": "lti_key_input",
                                                  "name": "lti_key",
                                                  "onChange": [Function],
                                                  "type": "text",
                                                  "value": undefined,
                                                }
                              }
                              labelText="LTI Key"
                    />
          </div>
          <div
                    className="o-grid__item u-half"
          >
                    <Input
                              className="c-input"
                              inputProps={
                                        Object {
                                                  "id": "lti_secret_input",
                                                  "name": "lti_secret",
                                                  "onChange": [Function],
                                                  "type": "text",
                                                  "value": undefined,
                                                }
                              }
                              labelText="LTI Secret"
                    />
          </div>
          <div
                    className="o-grid__item u-half"
          >
                    <Input
                              className="c-input"
                              inputProps={
                                        Object {
                                                  "id": "canvas_token_input",
                                                  "name": "canvas_token",
                                                  "onChange": [Function],
                                                  "placeholder": "",
                                                  "type": "text",
                                                  "value": null,
                                                }
                              }
                              labelText="Canvas Token - Current Canvas Token: undefined"
                    />
          </div>
          <div
                    className="o-grid__item u-full"
          >
                    <Textarea
                              className="c-input"
                              labelText="Config"
                              textareaProps={
                                        Object {
                                                  "id": "application_instance_config",
                                                  "name": "config",
                                                  "onChange": [Function],
                                                  "placeholder": "ex: { \\"foo\\": \\"bar\\" }",
                                                  "rows": 3,
                                                  "value": "{ \\"foo\\": \\"bar\\" }",
                                                }
                              }
                              warning={null}
                    />
          </div>
          <div
                    className="o-grid__item u-full"
          >
                    <h3
                              className="c-modal__subtitle"
                    >
                              LTI Configuration
                    </h3>
                    <Textarea
                              className="c-input"
                              labelText="Config"
                              textareaProps={
                                        Object {
                                                  "id": "application_instance_lti_config",
                                                  "name": "lti_config",
                                                  "onChange": [Function],
                                                  "rows": 3,
                                                  "value": "",
                                                }
                              }
                              warning={null}
                    />
          </div>
</div>,
        <button
          className="c-btn c-btn--yellow"
          onClick={[Function]}
          type="button"
>
          Save
</button>,
        <button
          className="c-btn c-btn--gray--large u-m-right"
          onClick={[Function]}
          type="button"
>
          Cancel
</button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="o-grid__item u-half"
>
              <div
                            className="c-input"
              >
                            <span>
                                          Domain
                            </span>
                            <Select
                                          addLabelText="Add \\"{label}\\"?"
                                          arrowRenderer={[Function]}
                                          autosize={true}
                                          backspaceRemoves={true}
                                          backspaceToRemoveMessage="Press backspace to remove {label}"
                                          clearAllText="Clear all"
                                          clearRenderer={[Function]}
                                          clearValueText="Clear value"
                                          clearable={false}
                                          closeOnSelect={true}
                                          deleteRemoves={true}
                                          delimiter=","
                                          disabled={false}
                                          escapeClearsValue={true}
                                          filterOptions={[Function]}
                                          ignoreAccents={true}
                                          ignoreCase={true}
                                          inputProps={Object {}}
                                          isLoading={false}
                                          joinValues={false}
                                          labelKey="label"
                                          matchPos="any"
                                          matchProp="any"
                                          menuBuffer={0}
                                          menuRenderer={[Function]}
                                          multi={false}
                                          name="site_id"
                                          noResultsText="No results found"
                                          onBlurResetsInput={true}
                                          onChange={[Function]}
                                          onCloseResetsInput={true}
                                          onSelectResetsInput={true}
                                          openOnClick={true}
                                          optionComponent={[Function]}
                                          options={
                                                        Array [
                                                                      Object {
                                                                        "label": <div>
                                                                          Add New
                                                        </div>,
                                                                        "onSelect": [Function],
                                                                        "value": "new",
                                                                      },
                                                                    ]
                                          }
                                          pageSize={5}
                                          placeholder="Select a Domain"
                                          required={false}
                                          scrollMenuIntoView={true}
                                          searchable={false}
                                          simpleValue={false}
                                          tabSelectsValue={true}
                                          value="foo"
                                          valueComponent={[Function]}
                                          valueKey="value"
                            />
              </div>
</div>,
            <div
              className="o-grid__item u-half"
>
              <Input
                            className="c-input"
                            inputProps={
                                          Object {
                                                        "disabled": undefined,
                                                        "id": "lti_key_input",
                                                        "name": "lti_key",
                                                        "onChange": [Function],
                                                        "type": "text",
                                                        "value": undefined,
                                                      }
                            }
                            labelText="LTI Key"
              />
</div>,
            <div
              className="o-grid__item u-half"
>
              <Input
                            className="c-input"
                            inputProps={
                                          Object {
                                                        "id": "lti_secret_input",
                                                        "name": "lti_secret",
                                                        "onChange": [Function],
                                                        "type": "text",
                                                        "value": undefined,
                                                      }
                            }
                            labelText="LTI Secret"
              />
</div>,
            <div
              className="o-grid__item u-half"
>
              <Input
                            className="c-input"
                            inputProps={
                                          Object {
                                                        "id": "canvas_token_input",
                                                        "name": "canvas_token",
                                                        "onChange": [Function],
                                                        "placeholder": "",
                                                        "type": "text",
                                                        "value": null,
                                                      }
                            }
                            labelText="Canvas Token - Current Canvas Token: undefined"
              />
</div>,
            <div
              className="o-grid__item u-full"
>
              <Textarea
                            className="c-input"
                            labelText="Config"
                            textareaProps={
                                          Object {
                                                        "id": "application_instance_config",
                                                        "name": "config",
                                                        "onChange": [Function],
                                                        "placeholder": "ex: { \\"foo\\": \\"bar\\" }",
                                                        "rows": 3,
                                                        "value": "{ \\"foo\\": \\"bar\\" }",
                                                      }
                            }
                            warning={null}
              />
</div>,
            <div
              className="o-grid__item u-full"
>
              <h3
                            className="c-modal__subtitle"
              >
                            LTI Configuration
              </h3>
              <Textarea
                            className="c-input"
                            labelText="Config"
                            textareaProps={
                                          Object {
                                                        "id": "application_instance_lti_config",
                                                        "name": "lti_config",
                                                        "onChange": [Function],
                                                        "rows": 3,
                                                        "value": "",
                                                      }
                            }
                            warning={null}
              />
</div>,
          ],
          "className": "o-grid o-grid__modal-top",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="c-input"
>
                <span>
                                Domain
                </span>
                <Select
                                addLabelText="Add \\"{label}\\"?"
                                arrowRenderer={[Function]}
                                autosize={true}
                                backspaceRemoves={true}
                                backspaceToRemoveMessage="Press backspace to remove {label}"
                                clearAllText="Clear all"
                                clearRenderer={[Function]}
                                clearValueText="Clear value"
                                clearable={false}
                                closeOnSelect={true}
                                deleteRemoves={true}
                                delimiter=","
                                disabled={false}
                                escapeClearsValue={true}
                                filterOptions={[Function]}
                                ignoreAccents={true}
                                ignoreCase={true}
                                inputProps={Object {}}
                                isLoading={false}
                                joinValues={false}
                                labelKey="label"
                                matchPos="any"
                                matchProp="any"
                                menuBuffer={0}
                                menuRenderer={[Function]}
                                multi={false}
                                name="site_id"
                                noResultsText="No results found"
                                onBlurResetsInput={true}
                                onChange={[Function]}
                                onCloseResetsInput={true}
                                onSelectResetsInput={true}
                                openOnClick={true}
                                optionComponent={[Function]}
                                options={
                                                Array [
                                                                Object {
                                                                  "label": <div>
                                                                    Add New
                                                </div>,
                                                                  "onSelect": [Function],
                                                                  "value": "new",
                                                                },
                                                              ]
                                }
                                pageSize={5}
                                placeholder="Select a Domain"
                                required={false}
                                scrollMenuIntoView={true}
                                searchable={false}
                                simpleValue={false}
                                tabSelectsValue={true}
                                value="foo"
                                valueComponent={[Function]}
                                valueKey="value"
                />
</div>,
              "className": "o-grid__item u-half",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    Domain
</span>,
                  <Select
                    addLabelText="Add \\"{label}\\"?"
                    arrowRenderer={[Function]}
                    autosize={true}
                    backspaceRemoves={true}
                    backspaceToRemoveMessage="Press backspace to remove {label}"
                    clearAllText="Clear all"
                    clearRenderer={[Function]}
                    clearValueText="Clear value"
                    clearable={false}
                    closeOnSelect={true}
                    deleteRemoves={true}
                    delimiter=","
                    disabled={false}
                    escapeClearsValue={true}
                    filterOptions={[Function]}
                    ignoreAccents={true}
                    ignoreCase={true}
                    inputProps={Object {}}
                    isLoading={false}
                    joinValues={false}
                    labelKey="label"
                    matchPos="any"
                    matchProp="any"
                    menuBuffer={0}
                    menuRenderer={[Function]}
                    multi={false}
                    name="site_id"
                    noResultsText="No results found"
                    onBlurResetsInput={true}
                    onChange={[Function]}
                    onCloseResetsInput={true}
                    onSelectResetsInput={true}
                    openOnClick={true}
                    optionComponent={[Function]}
                    options={
                                        Array [
                                                            Object {
                                                              "label": <div>
                                                                Add New
                                        </div>,
                                                              "onSelect": [Function],
                                                              "value": "new",
                                                            },
                                                          ]
                    }
                    pageSize={5}
                    placeholder="Select a Domain"
                    required={false}
                    scrollMenuIntoView={true}
                    searchable={false}
                    simpleValue={false}
                    tabSelectsValue={true}
                    value="foo"
                    valueComponent={[Function]}
                    valueKey="value"
/>,
                ],
                "className": "c-input",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Domain",
                  },
                  "ref": null,
                  "rendered": "Domain",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "addLabelText": "Add \\"{label}\\"?",
                    "arrowRenderer": [Function],
                    "autosize": true,
                    "backspaceRemoves": true,
                    "backspaceToRemoveMessage": "Press backspace to remove {label}",
                    "clearAllText": "Clear all",
                    "clearRenderer": [Function],
                    "clearValueText": "Clear value",
                    "clearable": false,
                    "closeOnSelect": true,
                    "deleteRemoves": true,
                    "delimiter": ",",
                    "disabled": false,
                    "escapeClearsValue": true,
                    "filterOptions": [Function],
                    "ignoreAccents": true,
                    "ignoreCase": true,
                    "inputProps": Object {},
                    "isLoading": false,
                    "joinValues": false,
                    "labelKey": "label",
                    "matchPos": "any",
                    "matchProp": "any",
                    "menuBuffer": 0,
                    "menuRenderer": [Function],
                    "multi": false,
                    "name": "site_id",
                    "noResultsText": "No results found",
                    "onBlurResetsInput": true,
                    "onChange": [Function],
                    "onCloseResetsInput": true,
                    "onSelectResetsInput": true,
                    "openOnClick": true,
                    "optionComponent": [Function],
                    "options": Array [
                      Object {
                        "label": <div>
                          Add New
</div>,
                        "onSelect": [Function],
                        "value": "new",
                      },
                    ],
                    "pageSize": 5,
                    "placeholder": "Select a Domain",
                    "required": false,
                    "scrollMenuIntoView": true,
                    "searchable": false,
                    "simpleValue": false,
                    "tabSelectsValue": true,
                    "value": "foo",
                    "valueComponent": [Function],
                    "valueKey": "value",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <Input
                className="c-input"
                inputProps={
                                Object {
                                                "disabled": undefined,
                                                "id": "lti_key_input",
                                                "name": "lti_key",
                                                "onChange": [Function],
                                                "type": "text",
                                                "value": undefined,
                                              }
                }
                labelText="LTI Key"
/>,
              "className": "o-grid__item u-half",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "className": "c-input",
                "inputProps": Object {
                  "disabled": undefined,
                  "id": "lti_key_input",
                  "name": "lti_key",
                  "onChange": [Function],
                  "type": "text",
                  "value": undefined,
                },
                "labelText": "LTI Key",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <Input
                className="c-input"
                inputProps={
                                Object {
                                                "id": "lti_secret_input",
                                                "name": "lti_secret",
                                                "onChange": [Function],
                                                "type": "text",
                                                "value": undefined,
                                              }
                }
                labelText="LTI Secret"
/>,
              "className": "o-grid__item u-half",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "className": "c-input",
                "inputProps": Object {
                  "id": "lti_secret_input",
                  "name": "lti_secret",
                  "onChange": [Function],
                  "type": "text",
                  "value": undefined,
                },
                "labelText": "LTI Secret",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <Input
                className="c-input"
                inputProps={
                                Object {
                                                "id": "canvas_token_input",
                                                "name": "canvas_token",
                                                "onChange": [Function],
                                                "placeholder": "",
                                                "type": "text",
                                                "value": null,
                                              }
                }
                labelText="Canvas Token - Current Canvas Token: undefined"
/>,
              "className": "o-grid__item u-half",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "className": "c-input",
                "inputProps": Object {
                  "id": "canvas_token_input",
                  "name": "canvas_token",
                  "onChange": [Function],
                  "placeholder": "",
                  "type": "text",
                  "value": null,
                },
                "labelText": "Canvas Token - Current Canvas Token: undefined",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <Textarea
                className="c-input"
                labelText="Config"
                textareaProps={
                                Object {
                                                "id": "application_instance_config",
                                                "name": "config",
                                                "onChange": [Function],
                                                "placeholder": "ex: { \\"foo\\": \\"bar\\" }",
                                                "rows": 3,
                                                "value": "{ \\"foo\\": \\"bar\\" }",
                                              }
                }
                warning={null}
/>,
              "className": "o-grid__item u-full",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "className": "c-input",
                "labelText": "Config",
                "textareaProps": Object {
                  "id": "application_instance_config",
                  "name": "config",
                  "onChange": [Function],
                  "placeholder": "ex: { \\"foo\\": \\"bar\\" }",
                  "rows": 3,
                  "value": "{ \\"foo\\": \\"bar\\" }",
                },
                "warning": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3
                  className="c-modal__subtitle"
>
                  LTI Configuration
</h3>,
                <Textarea
                  className="c-input"
                  labelText="Config"
                  textareaProps={
                                    Object {
                                                      "id": "application_instance_lti_config",
                                                      "name": "lti_config",
                                                      "onChange": [Function],
                                                      "rows": 3,
                                                      "value": "",
                                                    }
                  }
                  warning={null}
/>,
              ],
              "className": "o-grid__item u-full",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "LTI Configuration",
                  "className": "c-modal__subtitle",
                },
                "ref": null,
                "rendered": "LTI Configuration",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "className": "c-input",
                  "labelText": "Config",
                  "textareaProps": Object {
                    "id": "application_instance_lti_config",
                    "name": "lti_config",
                    "onChange": [Function],
                    "rows": 3,
                    "value": "",
                  },
                  "warning": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Save",
          "className": "c-btn c-btn--yellow",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": "Save",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Cancel",
          "className": "c-btn c-btn--gray--large u-m-right",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": "Cancel",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="o-grid o-grid__modal-top"
>
            <div
                        className="o-grid__item u-half"
            >
                        <div
                                    className="c-input"
                        >
                                    <span>
                                                Domain
                                    </span>
                                    <Select
                                                addLabelText="Add \\"{label}\\"?"
                                                arrowRenderer={[Function]}
                                                autosize={true}
                                                backspaceRemoves={true}
                                                backspaceToRemoveMessage="Press backspace to remove {label}"
                                                clearAllText="Clear all"
                                                clearRenderer={[Function]}
                                                clearValueText="Clear value"
                                                clearable={false}
                                                closeOnSelect={true}
                                                deleteRemoves={true}
                                                delimiter=","
                                                disabled={false}
                                                escapeClearsValue={true}
                                                filterOptions={[Function]}
                                                ignoreAccents={true}
                                                ignoreCase={true}
                                                inputProps={Object {}}
                                                isLoading={false}
                                                joinValues={false}
                                                labelKey="label"
                                                matchPos="any"
                                                matchProp="any"
                                                menuBuffer={0}
                                                menuRenderer={[Function]}
                                                multi={false}
                                                name="site_id"
                                                noResultsText="No results found"
                                                onBlurResetsInput={true}
                                                onChange={[Function]}
                                                onCloseResetsInput={true}
                                                onSelectResetsInput={true}
                                                openOnClick={true}
                                                optionComponent={[Function]}
                                                options={
                                                            Array [
                                                                        Object {
                                                                          "label": <div>
                                                                            Add New
                                                            </div>,
                                                                          "onSelect": [Function],
                                                                          "value": "new",
                                                                        },
                                                                      ]
                                                }
                                                pageSize={5}
                                                placeholder="Select a Domain"
                                                required={false}
                                                scrollMenuIntoView={true}
                                                searchable={false}
                                                simpleValue={false}
                                                tabSelectsValue={true}
                                                value="foo"
                                                valueComponent={[Function]}
                                                valueKey="value"
                                    />
                        </div>
            </div>
            <div
                        className="o-grid__item u-half"
            >
                        <Input
                                    className="c-input"
                                    inputProps={
                                                Object {
                                                            "disabled": undefined,
                                                            "id": "lti_key_input",
                                                            "name": "lti_key",
                                                            "onChange": [Function],
                                                            "type": "text",
                                                            "value": undefined,
                                                          }
                                    }
                                    labelText="LTI Key"
                        />
            </div>
            <div
                        className="o-grid__item u-half"
            >
                        <Input
                                    className="c-input"
                                    inputProps={
                                                Object {
                                                            "id": "lti_secret_input",
                                                            "name": "lti_secret",
                                                            "onChange": [Function],
                                                            "type": "text",
                                                            "value": undefined,
                                                          }
                                    }
                                    labelText="LTI Secret"
                        />
            </div>
            <div
                        className="o-grid__item u-half"
            >
                        <Input
                                    className="c-input"
                                    inputProps={
                                                Object {
                                                            "id": "canvas_token_input",
                                                            "name": "canvas_token",
                                                            "onChange": [Function],
                                                            "placeholder": "",
                                                            "type": "text",
                                                            "value": null,
                                                          }
                                    }
                                    labelText="Canvas Token - Current Canvas Token: undefined"
                        />
            </div>
            <div
                        className="o-grid__item u-full"
            >
                        <Textarea
                                    className="c-input"
                                    labelText="Config"
                                    textareaProps={
                                                Object {
                                                            "id": "application_instance_config",
                                                            "name": "config",
                                                            "onChange": [Function],
                                                            "placeholder": "ex: { \\"foo\\": \\"bar\\" }",
                                                            "rows": 3,
                                                            "value": "{ \\"foo\\": \\"bar\\" }",
                                                          }
                                    }
                                    warning={null}
                        />
            </div>
            <div
                        className="o-grid__item u-full"
            >
                        <h3
                                    className="c-modal__subtitle"
                        >
                                    LTI Configuration
                        </h3>
                        <Textarea
                                    className="c-input"
                                    labelText="Config"
                                    textareaProps={
                                                Object {
                                                            "id": "application_instance_lti_config",
                                                            "name": "lti_config",
                                                            "onChange": [Function],
                                                            "rows": 3,
                                                            "value": "",
                                                          }
                                    }
                                    warning={null}
                        />
            </div>
</div>,
          <button
            className="c-btn c-btn--yellow"
            onClick={[Function]}
            type="button"
>
            Save
</button>,
          <button
            className="c-btn c-btn--gray--large u-m-right"
            onClick={[Function]}
            type="button"
>
            Cancel
</button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="o-grid__item u-half"
>
                <div
                                className="c-input"
                >
                                <span>
                                                Domain
                                </span>
                                <Select
                                                addLabelText="Add \\"{label}\\"?"
                                                arrowRenderer={[Function]}
                                                autosize={true}
                                                backspaceRemoves={true}
                                                backspaceToRemoveMessage="Press backspace to remove {label}"
                                                clearAllText="Clear all"
                                                clearRenderer={[Function]}
                                                clearValueText="Clear value"
                                                clearable={false}
                                                closeOnSelect={true}
                                                deleteRemoves={true}
                                                delimiter=","
                                                disabled={false}
                                                escapeClearsValue={true}
                                                filterOptions={[Function]}
                                                ignoreAccents={true}
                                                ignoreCase={true}
                                                inputProps={Object {}}
                                                isLoading={false}
                                                joinValues={false}
                                                labelKey="label"
                                                matchPos="any"
                                                matchProp="any"
                                                menuBuffer={0}
                                                menuRenderer={[Function]}
                                                multi={false}
                                                name="site_id"
                                                noResultsText="No results found"
                                                onBlurResetsInput={true}
                                                onChange={[Function]}
                                                onCloseResetsInput={true}
                                                onSelectResetsInput={true}
                                                openOnClick={true}
                                                optionComponent={[Function]}
                                                options={
                                                                Array [
                                                                                Object {
                                                                                  "label": <div>
                                                                                    Add New
                                                                </div>,
                                                                                  "onSelect": [Function],
                                                                                  "value": "new",
                                                                                },
                                                                              ]
                                                }
                                                pageSize={5}
                                                placeholder="Select a Domain"
                                                required={false}
                                                scrollMenuIntoView={true}
                                                searchable={false}
                                                simpleValue={false}
                                                tabSelectsValue={true}
                                                value="foo"
                                                valueComponent={[Function]}
                                                valueKey="value"
                                />
                </div>
</div>,
              <div
                className="o-grid__item u-half"
>
                <Input
                                className="c-input"
                                inputProps={
                                                Object {
                                                                "disabled": undefined,
                                                                "id": "lti_key_input",
                                                                "name": "lti_key",
                                                                "onChange": [Function],
                                                                "type": "text",
                                                                "value": undefined,
                                                              }
                                }
                                labelText="LTI Key"
                />
</div>,
              <div
                className="o-grid__item u-half"
>
                <Input
                                className="c-input"
                                inputProps={
                                                Object {
                                                                "id": "lti_secret_input",
                                                                "name": "lti_secret",
                                                                "onChange": [Function],
                                                                "type": "text",
                                                                "value": undefined,
                                                              }
                                }
                                labelText="LTI Secret"
                />
</div>,
              <div
                className="o-grid__item u-half"
>
                <Input
                                className="c-input"
                                inputProps={
                                                Object {
                                                                "id": "canvas_token_input",
                                                                "name": "canvas_token",
                                                                "onChange": [Function],
                                                                "placeholder": "",
                                                                "type": "text",
                                                                "value": null,
                                                              }
                                }
                                labelText="Canvas Token - Current Canvas Token: undefined"
                />
</div>,
              <div
                className="o-grid__item u-full"
>
                <Textarea
                                className="c-input"
                                labelText="Config"
                                textareaProps={
                                                Object {
                                                                "id": "application_instance_config",
                                                                "name": "config",
                                                                "onChange": [Function],
                                                                "placeholder": "ex: { \\"foo\\": \\"bar\\" }",
                                                                "rows": 3,
                                                                "value": "{ \\"foo\\": \\"bar\\" }",
                                                              }
                                }
                                warning={null}
                />
</div>,
              <div
                className="o-grid__item u-full"
>
                <h3
                                className="c-modal__subtitle"
                >
                                LTI Configuration
                </h3>
                <Textarea
                                className="c-input"
                                labelText="Config"
                                textareaProps={
                                                Object {
                                                                "id": "application_instance_lti_config",
                                                                "name": "lti_config",
                                                                "onChange": [Function],
                                                                "rows": 3,
                                                                "value": "",
                                                              }
                                }
                                warning={null}
                />
</div>,
            ],
            "className": "o-grid o-grid__modal-top",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="c-input"
>
                  <span>
                                    Domain
                  </span>
                  <Select
                                    addLabelText="Add \\"{label}\\"?"
                                    arrowRenderer={[Function]}
                                    autosize={true}
                                    backspaceRemoves={true}
                                    backspaceToRemoveMessage="Press backspace to remove {label}"
                                    clearAllText="Clear all"
                                    clearRenderer={[Function]}
                                    clearValueText="Clear value"
                                    clearable={false}
                                    closeOnSelect={true}
                                    deleteRemoves={true}
                                    delimiter=","
                                    disabled={false}
                                    escapeClearsValue={true}
                                    filterOptions={[Function]}
                                    ignoreAccents={true}
                                    ignoreCase={true}
                                    inputProps={Object {}}
                                    isLoading={false}
                                    joinValues={false}
                                    labelKey="label"
                                    matchPos="any"
                                    matchProp="any"
                                    menuBuffer={0}
                                    menuRenderer={[Function]}
                                    multi={false}
                                    name="site_id"
                                    noResultsText="No results found"
                                    onBlurResetsInput={true}
                                    onChange={[Function]}
                                    onCloseResetsInput={true}
                                    onSelectResetsInput={true}
                                    openOnClick={true}
                                    optionComponent={[Function]}
                                    options={
                                                      Array [
                                                                        Object {
                                                                          "label": <div>
                                                                            Add New
                                                      </div>,
                                                                          "onSelect": [Function],
                                                                          "value": "new",
                                                                        },
                                                                      ]
                                    }
                                    pageSize={5}
                                    placeholder="Select a Domain"
                                    required={false}
                                    scrollMenuIntoView={true}
                                    searchable={false}
                                    simpleValue={false}
                                    tabSelectsValue={true}
                                    value="foo"
                                    valueComponent={[Function]}
                                    valueKey="value"
                  />
</div>,
                "className": "o-grid__item u-half",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      Domain
</span>,
                    <Select
                      addLabelText="Add \\"{label}\\"?"
                      arrowRenderer={[Function]}
                      autosize={true}
                      backspaceRemoves={true}
                      backspaceToRemoveMessage="Press backspace to remove {label}"
                      clearAllText="Clear all"
                      clearRenderer={[Function]}
                      clearValueText="Clear value"
                      clearable={false}
                      closeOnSelect={true}
                      deleteRemoves={true}
                      delimiter=","
                      disabled={false}
                      escapeClearsValue={true}
                      filterOptions={[Function]}
                      ignoreAccents={true}
                      ignoreCase={true}
                      inputProps={Object {}}
                      isLoading={false}
                      joinValues={false}
                      labelKey="label"
                      matchPos="any"
                      matchProp="any"
                      menuBuffer={0}
                      menuRenderer={[Function]}
                      multi={false}
                      name="site_id"
                      noResultsText="No results found"
                      onBlurResetsInput={true}
                      onChange={[Function]}
                      onCloseResetsInput={true}
                      onSelectResetsInput={true}
                      openOnClick={true}
                      optionComponent={[Function]}
                      options={
                                            Array [
                                                                  Object {
                                                                    "label": <div>
                                                                      Add New
                                            </div>,
                                                                    "onSelect": [Function],
                                                                    "value": "new",
                                                                  },
                                                                ]
                      }
                      pageSize={5}
                      placeholder="Select a Domain"
                      required={false}
                      scrollMenuIntoView={true}
                      searchable={false}
                      simpleValue={false}
                      tabSelectsValue={true}
                      value="foo"
                      valueComponent={[Function]}
                      valueKey="value"
/>,
                  ],
                  "className": "c-input",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Domain",
                    },
                    "ref": null,
                    "rendered": "Domain",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "addLabelText": "Add \\"{label}\\"?",
                      "arrowRenderer": [Function],
                      "autosize": true,
                      "backspaceRemoves": true,
                      "backspaceToRemoveMessage": "Press backspace to remove {label}",
                      "clearAllText": "Clear all",
                      "clearRenderer": [Function],
                      "clearValueText": "Clear value",
                      "clearable": false,
                      "closeOnSelect": true,
                      "deleteRemoves": true,
                      "delimiter": ",",
                      "disabled": false,
                      "escapeClearsValue": true,
                      "filterOptions": [Function],
                      "ignoreAccents": true,
                      "ignoreCase": true,
                      "inputProps": Object {},
                      "isLoading": false,
                      "joinValues": false,
                      "labelKey": "label",
                      "matchPos": "any",
                      "matchProp": "any",
                      "menuBuffer": 0,
                      "menuRenderer": [Function],
                      "multi": false,
                      "name": "site_id",
                      "noResultsText": "No results found",
                      "onBlurResetsInput": true,
                      "onChange": [Function],
                      "onCloseResetsInput": true,
                      "onSelectResetsInput": true,
                      "openOnClick": true,
                      "optionComponent": [Function],
                      "options": Array [
                        Object {
                          "label": <div>
                            Add New
</div>,
                          "onSelect": [Function],
                          "value": "new",
                        },
                      ],
                      "pageSize": 5,
                      "placeholder": "Select a Domain",
                      "required": false,
                      "scrollMenuIntoView": true,
                      "searchable": false,
                      "simpleValue": false,
                      "tabSelectsValue": true,
                      "value": "foo",
                      "valueComponent": [Function],
                      "valueKey": "value",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Input
                  className="c-input"
                  inputProps={
                                    Object {
                                                      "disabled": undefined,
                                                      "id": "lti_key_input",
                                                      "name": "lti_key",
                                                      "onChange": [Function],
                                                      "type": "text",
                                                      "value": undefined,
                                                    }
                  }
                  labelText="LTI Key"
/>,
                "className": "o-grid__item u-half",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "className": "c-input",
                  "inputProps": Object {
                    "disabled": undefined,
                    "id": "lti_key_input",
                    "name": "lti_key",
                    "onChange": [Function],
                    "type": "text",
                    "value": undefined,
                  },
                  "labelText": "LTI Key",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Input
                  className="c-input"
                  inputProps={
                                    Object {
                                                      "id": "lti_secret_input",
                                                      "name": "lti_secret",
                                                      "onChange": [Function],
                                                      "type": "text",
                                                      "value": undefined,
                                                    }
                  }
                  labelText="LTI Secret"
/>,
                "className": "o-grid__item u-half",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "className": "c-input",
                  "inputProps": Object {
                    "id": "lti_secret_input",
                    "name": "lti_secret",
                    "onChange": [Function],
                    "type": "text",
                    "value": undefined,
                  },
                  "labelText": "LTI Secret",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Input
                  className="c-input"
                  inputProps={
                                    Object {
                                                      "id": "canvas_token_input",
                                                      "name": "canvas_token",
                                                      "onChange": [Function],
                                                      "placeholder": "",
                                                      "type": "text",
                                                      "value": null,
                                                    }
                  }
                  labelText="Canvas Token - Current Canvas Token: undefined"
/>,
                "className": "o-grid__item u-half",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "className": "c-input",
                  "inputProps": Object {
                    "id": "canvas_token_input",
                    "name": "canvas_token",
                    "onChange": [Function],
                    "placeholder": "",
                    "type": "text",
                    "value": null,
                  },
                  "labelText": "Canvas Token - Current Canvas Token: undefined",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <Textarea
                  className="c-input"
                  labelText="Config"
                  textareaProps={
                                    Object {
                                                      "id": "application_instance_config",
                                                      "name": "config",
                                                      "onChange": [Function],
                                                      "placeholder": "ex: { \\"foo\\": \\"bar\\" }",
                                                      "rows": 3,
                                                      "value": "{ \\"foo\\": \\"bar\\" }",
                                                    }
                  }
                  warning={null}
/>,
                "className": "o-grid__item u-full",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "className": "c-input",
                  "labelText": "Config",
                  "textareaProps": Object {
                    "id": "application_instance_config",
                    "name": "config",
                    "onChange": [Function],
                    "placeholder": "ex: { \\"foo\\": \\"bar\\" }",
                    "rows": 3,
                    "value": "{ \\"foo\\": \\"bar\\" }",
                  },
                  "warning": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3
                    className="c-modal__subtitle"
>
                    LTI Configuration
</h3>,
                  <Textarea
                    className="c-input"
                    labelText="Config"
                    textareaProps={
                                        Object {
                                                            "id": "application_instance_lti_config",
                                                            "name": "lti_config",
                                                            "onChange": [Function],
                                                            "rows": 3,
                                                            "value": "",
                                                          }
                    }
                    warning={null}
/>,
                ],
                "className": "o-grid__item u-full",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "LTI Configuration",
                    "className": "c-modal__subtitle",
                  },
                  "ref": null,
                  "rendered": "LTI Configuration",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "function",
                  "props": Object {
                    "className": "c-input",
                    "labelText": "Config",
                    "textareaProps": Object {
                      "id": "application_instance_lti_config",
                      "name": "lti_config",
                      "onChange": [Function],
                      "rows": 3,
                      "value": "",
                    },
                    "warning": null,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Save",
            "className": "c-btn c-btn--yellow",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "Save",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Cancel",
            "className": "c-btn c-btn--gray--large u-m-right",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "Cancel",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
