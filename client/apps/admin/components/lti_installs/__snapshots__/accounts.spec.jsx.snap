// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lti installs accounts matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Accounts
    accounts={
      Object {
        "1": Object {
          "id": 1,
          "name": "account_name",
          "parent_account_id": null,
        },
      }
    }
    currentAccount={null}
    setAccountActive={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <SubAccount
          account={
            Object {
              "id": 1,
              "name": "account_name",
              "parent_account_id": null,
            }
          }
          accounts={
            Object {
              "1": Object {
                "id": 1,
                "name": "account_name",
                "parent_account_id": null,
              },
            }
          }
          currentAccount={null}
          isActive={null}
          setAccountActive={[Function]}
        />,
      ],
      "className": "c-filter-list",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "account_1",
        "nodeType": "class",
        "props": Object {
          "account": Object {
            "id": 1,
            "name": "account_name",
            "parent_account_id": null,
          },
          "accounts": Object {
            "1": Object {
              "id": 1,
              "name": "account_name",
              "parent_account_id": null,
            },
          },
          "currentAccount": null,
          "isActive": null,
          "setAccountActive": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "ul",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <SubAccount
            account={
              Object {
                "id": 1,
                "name": "account_name",
                "parent_account_id": null,
              }
            }
            accounts={
              Object {
                "1": Object {
                  "id": 1,
                  "name": "account_name",
                  "parent_account_id": null,
                },
              }
            }
            currentAccount={null}
            isActive={null}
            setAccountActive={[Function]}
          />,
        ],
        "className": "c-filter-list",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "account_1",
          "nodeType": "class",
          "props": Object {
            "account": Object {
              "id": 1,
              "name": "account_name",
              "parent_account_id": null,
            },
            "accounts": Object {
              "1": Object {
                "id": 1,
                "name": "account_name",
                "parent_account_id": null,
              },
            },
            "currentAccount": null,
            "isActive": null,
            "setAccountActive": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "ul",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
